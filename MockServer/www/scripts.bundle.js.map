{"version":3,"sources":["D:/Palinda/angular 2/ng2-base/node_modules/file-saver/FileSaver.js?9241","D:/Palinda/angular 2/ng2-base/node_modules/reflect-metadata/Reflect.js","D:/Palinda/angular 2/ng2-base/node_modules/script-loader/addScript.js","D:/Palinda/angular 2/ng2-base/node_modules/file-saver/FileSaver.js?1a13","D:/Palinda/angular 2/ng2-base/node_modules/reflect-metadata/Reflect.js?539e"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["module.exports = \"/* FileSaver.js\\n * A saveAs() FileSaver implementation.\\n * 1.3.2\\n * 2016-06-16 18:25:19\\n *\\n * By Eli Grey, http://eligrey.com\\n * License: MIT\\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\\n */\\n\\n/*global self */\\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\\n\\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\\n\\nvar saveAs = saveAs || (function(view) {\\n\\t\\\"use strict\\\";\\n\\t// IE <10 is explicitly unsupported\\n\\tif (typeof view === \\\"undefined\\\" || typeof navigator !== \\\"undefined\\\" && /MSIE [1-9]\\\\./.test(navigator.userAgent)) {\\n\\t\\treturn;\\n\\t}\\n\\tvar\\n\\t\\t  doc = view.document\\n\\t\\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\\n\\t\\t, get_URL = function() {\\n\\t\\t\\treturn view.URL || view.webkitURL || view;\\n\\t\\t}\\n\\t\\t, save_link = doc.createElementNS(\\\"http://www.w3.org/1999/xhtml\\\", \\\"a\\\")\\n\\t\\t, can_use_save_link = \\\"download\\\" in save_link\\n\\t\\t, click = function(node) {\\n\\t\\t\\tvar event = new MouseEvent(\\\"click\\\");\\n\\t\\t\\tnode.dispatchEvent(event);\\n\\t\\t}\\n\\t\\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\\n\\t\\t, is_chrome_ios =/CriOS\\\\/[\\\\d]+/.test(navigator.userAgent)\\n\\t\\t, throw_outside = function(ex) {\\n\\t\\t\\t(view.setImmediate || view.setTimeout)(function() {\\n\\t\\t\\t\\tthrow ex;\\n\\t\\t\\t}, 0);\\n\\t\\t}\\n\\t\\t, force_saveable_type = \\\"application/octet-stream\\\"\\n\\t\\t// the Blob API is fundamentally broken as there is no \\\"downloadfinished\\\" event to subscribe to\\n\\t\\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\\n\\t\\t, revoke = function(file) {\\n\\t\\t\\tvar revoker = function() {\\n\\t\\t\\t\\tif (typeof file === \\\"string\\\") { // file is an object URL\\n\\t\\t\\t\\t\\tget_URL().revokeObjectURL(file);\\n\\t\\t\\t\\t} else { // file is a File\\n\\t\\t\\t\\t\\tfile.remove();\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\tsetTimeout(revoker, arbitrary_revoke_timeout);\\n\\t\\t}\\n\\t\\t, dispatch = function(filesaver, event_types, event) {\\n\\t\\t\\tevent_types = [].concat(event_types);\\n\\t\\t\\tvar i = event_types.length;\\n\\t\\t\\twhile (i--) {\\n\\t\\t\\t\\tvar listener = filesaver[\\\"on\\\" + event_types[i]];\\n\\t\\t\\t\\tif (typeof listener === \\\"function\\\") {\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tlistener.call(filesaver, event || filesaver);\\n\\t\\t\\t\\t\\t} catch (ex) {\\n\\t\\t\\t\\t\\t\\tthrow_outside(ex);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t, auto_bom = function(blob) {\\n\\t\\t\\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\\n\\t\\t\\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\\n\\t\\t\\tif (/^\\\\s*(?:text\\\\/\\\\S*|application\\\\/xml|\\\\S*\\\\/\\\\S*\\\\+xml)\\\\s*;.*charset\\\\s*=\\\\s*utf-8/i.test(blob.type)) {\\n\\t\\t\\t\\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\\n\\t\\t\\t}\\n\\t\\t\\treturn blob;\\n\\t\\t}\\n\\t\\t, FileSaver = function(blob, name, no_auto_bom) {\\n\\t\\t\\tif (!no_auto_bom) {\\n\\t\\t\\t\\tblob = auto_bom(blob);\\n\\t\\t\\t}\\n\\t\\t\\t// First try a.download, then web filesystem, then object URLs\\n\\t\\t\\tvar\\n\\t\\t\\t\\t  filesaver = this\\n\\t\\t\\t\\t, type = blob.type\\n\\t\\t\\t\\t, force = type === force_saveable_type\\n\\t\\t\\t\\t, object_url\\n\\t\\t\\t\\t, dispatch_all = function() {\\n\\t\\t\\t\\t\\tdispatch(filesaver, \\\"writestart progress write writeend\\\".split(\\\" \\\"));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// on any filesys errors revert to saving with object URLs\\n\\t\\t\\t\\t, fs_error = function() {\\n\\t\\t\\t\\t\\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\\n\\t\\t\\t\\t\\t\\t// Safari doesn't allow downloading of blob urls\\n\\t\\t\\t\\t\\t\\tvar reader = new FileReader();\\n\\t\\t\\t\\t\\t\\treader.onloadend = function() {\\n\\t\\t\\t\\t\\t\\t\\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\\n\\t\\t\\t\\t\\t\\t\\tvar popup = view.open(url, '_blank');\\n\\t\\t\\t\\t\\t\\t\\tif(!popup) view.location.href = url;\\n\\t\\t\\t\\t\\t\\t\\turl=undefined; // release reference before dispatching\\n\\t\\t\\t\\t\\t\\t\\tfilesaver.readyState = filesaver.DONE;\\n\\t\\t\\t\\t\\t\\t\\tdispatch_all();\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\treader.readAsDataURL(blob);\\n\\t\\t\\t\\t\\t\\tfilesaver.readyState = filesaver.INIT;\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// don't create more object URLs than needed\\n\\t\\t\\t\\t\\tif (!object_url) {\\n\\t\\t\\t\\t\\t\\tobject_url = get_URL().createObjectURL(blob);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (force) {\\n\\t\\t\\t\\t\\t\\tview.location.href = object_url;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tvar opened = view.open(object_url, \\\"_blank\\\");\\n\\t\\t\\t\\t\\t\\tif (!opened) {\\n\\t\\t\\t\\t\\t\\t\\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\\n\\t\\t\\t\\t\\t\\t\\tview.location.href = object_url;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tfilesaver.readyState = filesaver.DONE;\\n\\t\\t\\t\\t\\tdispatch_all();\\n\\t\\t\\t\\t\\trevoke(object_url);\\n\\t\\t\\t\\t}\\n\\t\\t\\t;\\n\\t\\t\\tfilesaver.readyState = filesaver.INIT;\\n\\n\\t\\t\\tif (can_use_save_link) {\\n\\t\\t\\t\\tobject_url = get_URL().createObjectURL(blob);\\n\\t\\t\\t\\tsetTimeout(function() {\\n\\t\\t\\t\\t\\tsave_link.href = object_url;\\n\\t\\t\\t\\t\\tsave_link.download = name;\\n\\t\\t\\t\\t\\tclick(save_link);\\n\\t\\t\\t\\t\\tdispatch_all();\\n\\t\\t\\t\\t\\trevoke(object_url);\\n\\t\\t\\t\\t\\tfilesaver.readyState = filesaver.DONE;\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfs_error();\\n\\t\\t}\\n\\t\\t, FS_proto = FileSaver.prototype\\n\\t\\t, saveAs = function(blob, name, no_auto_bom) {\\n\\t\\t\\treturn new FileSaver(blob, name || blob.name || \\\"download\\\", no_auto_bom);\\n\\t\\t}\\n\\t;\\n\\t// IE 10+ (native saveAs)\\n\\tif (typeof navigator !== \\\"undefined\\\" && navigator.msSaveOrOpenBlob) {\\n\\t\\treturn function(blob, name, no_auto_bom) {\\n\\t\\t\\tname = name || blob.name || \\\"download\\\";\\n\\n\\t\\t\\tif (!no_auto_bom) {\\n\\t\\t\\t\\tblob = auto_bom(blob);\\n\\t\\t\\t}\\n\\t\\t\\treturn navigator.msSaveOrOpenBlob(blob, name);\\n\\t\\t};\\n\\t}\\n\\n\\tFS_proto.abort = function(){};\\n\\tFS_proto.readyState = FS_proto.INIT = 0;\\n\\tFS_proto.WRITING = 1;\\n\\tFS_proto.DONE = 2;\\n\\n\\tFS_proto.error =\\n\\tFS_proto.onwritestart =\\n\\tFS_proto.onprogress =\\n\\tFS_proto.onwrite =\\n\\tFS_proto.onabort =\\n\\tFS_proto.onerror =\\n\\tFS_proto.onwriteend =\\n\\t\\tnull;\\n\\n\\treturn saveAs;\\n}(\\n\\t   typeof self !== \\\"undefined\\\" && self\\n\\t|| typeof window !== \\\"undefined\\\" && window\\n\\t|| this.content\\n));\\n// `self` is undefined in Firefox for Android content script context\\n// while `this` is nsIContentFrameMessageManager\\n// with an attribute `content` that corresponds to the window\\n\\nif (typeof module !== \\\"undefined\\\" && module.exports) {\\n  module.exports.saveAs = saveAs;\\n} else if ((typeof define !== \\\"undefined\\\" && define !== null) && (define.amd !== null)) {\\n  define(\\\"FileSaver.js\\\", function() {\\n    return saveAs;\\n  });\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Palinda/angular 2/ng2-base/node_modules/raw-loader!D:/Palinda/angular 2/ng2-base/node_modules/file-saver/FileSaver.js\n// module id = ../../../../raw-loader/index.js!../../../../file-saver/FileSaver.js\n// module chunks = scripts","module.exports = \"/*! *****************************************************************************\\r\\nCopyright (C) Microsoft. All rights reserved.\\r\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\r\\nthis file except in compliance with the License. You may obtain a copy of the\\r\\nLicense at http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\r\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\r\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\\r\\nMERCHANTABLITY OR NON-INFRINGEMENT.\\r\\n\\r\\nSee the Apache Version 2.0 License for specific language governing permissions\\r\\nand limitations under the License.\\r\\n***************************************************************************** */\\r\\nvar Reflect;\\r\\n(function (Reflect) {\\r\\n    \\\"use strict\\\";\\r\\n    var hasOwn = Object.prototype.hasOwnProperty;\\r\\n    // feature test for Symbol support\\r\\n    var supportsSymbol = typeof Symbol === \\\"function\\\";\\r\\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \\\"undefined\\\" ? Symbol.toPrimitive : \\\"@@toPrimitive\\\";\\r\\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \\\"undefined\\\" ? Symbol.iterator : \\\"@@iterator\\\";\\r\\n    var HashMap;\\r\\n    (function (HashMap) {\\r\\n        var supportsCreate = typeof Object.create === \\\"function\\\"; // feature test for Object.create support\\r\\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\\r\\n        var downLevel = !supportsCreate && !supportsProto;\\r\\n        // create an object in dictionary mode (a.k.a. \\\"slow\\\" mode in v8)\\r\\n        HashMap.create = supportsCreate\\r\\n            ? function () { return MakeDictionary(Object.create(null)); }\\r\\n            : supportsProto\\r\\n                ? function () { return MakeDictionary({ __proto__: null }); }\\r\\n                : function () { return MakeDictionary({}); };\\r\\n        HashMap.has = downLevel\\r\\n            ? function (map, key) { return hasOwn.call(map, key); }\\r\\n            : function (map, key) { return key in map; };\\r\\n        HashMap.get = downLevel\\r\\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\\r\\n            : function (map, key) { return map[key]; };\\r\\n    })(HashMap || (HashMap = {}));\\r\\n    // Load global or shim versions of Map, Set, and WeakMap\\r\\n    var functionPrototype = Object.getPrototypeOf(Function);\\r\\n    var usePolyfill = typeof process === \\\"object\\\" && process.env && process.env[\\\"REFLECT_METADATA_USE_MAP_POLYFILL\\\"] === \\\"true\\\";\\r\\n    var _Map = !usePolyfill && typeof Map === \\\"function\\\" && typeof Map.prototype.entries === \\\"function\\\" ? Map : CreateMapPolyfill();\\r\\n    var _Set = !usePolyfill && typeof Set === \\\"function\\\" && typeof Set.prototype.entries === \\\"function\\\" ? Set : CreateSetPolyfill();\\r\\n    var _WeakMap = !usePolyfill && typeof WeakMap === \\\"function\\\" ? WeakMap : CreateWeakMapPolyfill();\\r\\n    // [[Metadata]] internal slot\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\\r\\n    var Metadata = new _WeakMap();\\r\\n    /**\\r\\n      * Applies a set of decorators to a property of a target object.\\r\\n      * @param decorators An array of decorators.\\r\\n      * @param target The target object.\\r\\n      * @param propertyKey (Optional) The property key to decorate.\\r\\n      * @param attributes (Optional) The property descriptor for the target key.\\r\\n      * @remarks Decorators are applied in reverse order.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     Example = Reflect.decorate(decoratorsArray, Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     Reflect.decorate(decoratorsArray, Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     Object.defineProperty(Example, \\\"staticMethod\\\",\\r\\n      *         Reflect.decorate(decoratorsArray, Example, \\\"staticMethod\\\",\\r\\n      *             Object.getOwnPropertyDescriptor(Example, \\\"staticMethod\\\")));\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     Object.defineProperty(Example.prototype, \\\"method\\\",\\r\\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \\\"method\\\",\\r\\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \\\"method\\\")));\\r\\n      *\\r\\n      */\\r\\n    function decorate(decorators, target, propertyKey, attributes) {\\r\\n        if (!IsUndefined(propertyKey)) {\\r\\n            if (!IsArray(decorators))\\r\\n                throw new TypeError();\\r\\n            if (!IsObject(target))\\r\\n                throw new TypeError();\\r\\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\\r\\n                throw new TypeError();\\r\\n            if (IsNull(attributes))\\r\\n                attributes = undefined;\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n            return DecorateProperty(decorators, target, propertyKey, attributes);\\r\\n        }\\r\\n        else {\\r\\n            if (!IsArray(decorators))\\r\\n                throw new TypeError();\\r\\n            if (!IsConstructor(target))\\r\\n                throw new TypeError();\\r\\n            return DecorateConstructor(decorators, target);\\r\\n        }\\r\\n    }\\r\\n    Reflect.decorate = decorate;\\r\\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\\r\\n    /**\\r\\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\\r\\n      * @param metadataKey The key for the metadata entry.\\r\\n      * @param metadataValue The value for the metadata entry.\\r\\n      * @returns A decorator function.\\r\\n      * @remarks\\r\\n      * If `metadataKey` is already defined for the target and target key, the\\r\\n      * metadataValue for that key will be overwritten.\\r\\n      * @example\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     @Reflect.metadata(key, value)\\r\\n      *     class Example {\\r\\n      *     }\\r\\n      *\\r\\n      *     // property (on constructor, TypeScript only)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         static staticProperty;\\r\\n      *     }\\r\\n      *\\r\\n      *     // property (on prototype, TypeScript only)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         property;\\r\\n      *     }\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         static staticMethod() { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         method() { }\\r\\n      *     }\\r\\n      *\\r\\n      */\\r\\n    function metadata(metadataKey, metadataValue) {\\r\\n        function decorator(target, propertyKey) {\\r\\n            if (!IsObject(target))\\r\\n                throw new TypeError();\\r\\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\\r\\n                throw new TypeError();\\r\\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\\r\\n        }\\r\\n        return decorator;\\r\\n    }\\r\\n    Reflect.metadata = metadata;\\r\\n    /**\\r\\n      * Define a unique metadata entry on the target.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param metadataValue A value that contains attached metadata.\\r\\n      * @param target The target object on which to define metadata.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      *     // decorator factory as metadata-producing annotation.\\r\\n      *     function MyAnnotation(options): Decorator {\\r\\n      *         return (target, key?) => Reflect.defineMetadata(\\\"custom:annotation\\\", options, target, key);\\r\\n      *     }\\r\\n      *\\r\\n      */\\r\\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\\r\\n    }\\r\\n    Reflect.defineMetadata = defineMetadata;\\r\\n    /**\\r\\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function hasMetadata(metadataKey, target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\\r\\n    }\\r\\n    Reflect.hasMetadata = hasMetadata;\\r\\n    /**\\r\\n      * Gets a value indicating whether the target object has the provided metadata key defined.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\\r\\n    }\\r\\n    Reflect.hasOwnMetadata = hasOwnMetadata;\\r\\n    /**\\r\\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getMetadata(metadataKey, target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\\r\\n    }\\r\\n    Reflect.getMetadata = getMetadata;\\r\\n    /**\\r\\n      * Gets the metadata value for the provided metadata key on the target object.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getOwnMetadata(metadataKey, target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\\r\\n    }\\r\\n    Reflect.getOwnMetadata = getOwnMetadata;\\r\\n    /**\\r\\n      * Gets the metadata keys defined on the target object or its prototype chain.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns An array of unique metadata keys.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getMetadataKeys(Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getMetadataKeys(Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getMetadataKeys(Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getMetadataKeys(Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getMetadataKeys(Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getMetadataKeys(target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryMetadataKeys(target, propertyKey);\\r\\n    }\\r\\n    Reflect.getMetadataKeys = getMetadataKeys;\\r\\n    /**\\r\\n      * Gets the unique metadata keys defined on the target object.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns An array of unique metadata keys.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getOwnMetadataKeys(target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\\r\\n    }\\r\\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\\r\\n    /**\\r\\n      * Deletes the metadata entry from the target object with the provided key.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param propertyKey (Optional) The property key for the target.\\r\\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function deleteMetadata(metadataKey, target, propertyKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(propertyKey))\\r\\n            propertyKey = ToPropertyKey(propertyKey);\\r\\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return false;\\r\\n        if (!metadataMap.delete(metadataKey))\\r\\n            return false;\\r\\n        if (metadataMap.size > 0)\\r\\n            return true;\\r\\n        var targetMetadata = Metadata.get(target);\\r\\n        targetMetadata.delete(propertyKey);\\r\\n        if (targetMetadata.size > 0)\\r\\n            return true;\\r\\n        Metadata.delete(target);\\r\\n        return true;\\r\\n    }\\r\\n    Reflect.deleteMetadata = deleteMetadata;\\r\\n    function DecorateConstructor(decorators, target) {\\r\\n        for (var i = decorators.length - 1; i >= 0; --i) {\\r\\n            var decorator = decorators[i];\\r\\n            var decorated = decorator(target);\\r\\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\\r\\n                if (!IsConstructor(decorated))\\r\\n                    throw new TypeError();\\r\\n                target = decorated;\\r\\n            }\\r\\n        }\\r\\n        return target;\\r\\n    }\\r\\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\\r\\n        for (var i = decorators.length - 1; i >= 0; --i) {\\r\\n            var decorator = decorators[i];\\r\\n            var decorated = decorator(target, propertyKey, descriptor);\\r\\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\\r\\n                if (!IsObject(decorated))\\r\\n                    throw new TypeError();\\r\\n                descriptor = decorated;\\r\\n            }\\r\\n        }\\r\\n        return descriptor;\\r\\n    }\\r\\n    function GetOrCreateMetadataMap(O, P, Create) {\\r\\n        var targetMetadata = Metadata.get(O);\\r\\n        if (IsUndefined(targetMetadata)) {\\r\\n            if (!Create)\\r\\n                return undefined;\\r\\n            targetMetadata = new _Map();\\r\\n            Metadata.set(O, targetMetadata);\\r\\n        }\\r\\n        var metadataMap = targetMetadata.get(P);\\r\\n        if (IsUndefined(metadataMap)) {\\r\\n            if (!Create)\\r\\n                return undefined;\\r\\n            metadataMap = new _Map();\\r\\n            targetMetadata.set(P, metadataMap);\\r\\n        }\\r\\n        return metadataMap;\\r\\n    }\\r\\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\\r\\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\\r\\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\\r\\n        if (hasOwn)\\r\\n            return true;\\r\\n        var parent = OrdinaryGetPrototypeOf(O);\\r\\n        if (!IsNull(parent))\\r\\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\\r\\n        return false;\\r\\n    }\\r\\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\\r\\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return false;\\r\\n        return ToBoolean(metadataMap.has(MetadataKey));\\r\\n    }\\r\\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\\r\\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\\r\\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\\r\\n        if (hasOwn)\\r\\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\\r\\n        var parent = OrdinaryGetPrototypeOf(O);\\r\\n        if (!IsNull(parent))\\r\\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\\r\\n        return undefined;\\r\\n    }\\r\\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\\r\\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return undefined;\\r\\n        return metadataMap.get(MetadataKey);\\r\\n    }\\r\\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\\r\\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\\r\\n        metadataMap.set(MetadataKey, MetadataValue);\\r\\n    }\\r\\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\\r\\n    function OrdinaryMetadataKeys(O, P) {\\r\\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\\r\\n        var parent = OrdinaryGetPrototypeOf(O);\\r\\n        if (parent === null)\\r\\n            return ownKeys;\\r\\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\\r\\n        if (parentKeys.length <= 0)\\r\\n            return ownKeys;\\r\\n        if (ownKeys.length <= 0)\\r\\n            return parentKeys;\\r\\n        var set = new _Set();\\r\\n        var keys = [];\\r\\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\\r\\n            var key = ownKeys_1[_i];\\r\\n            var hasKey = set.has(key);\\r\\n            if (!hasKey) {\\r\\n                set.add(key);\\r\\n                keys.push(key);\\r\\n            }\\r\\n        }\\r\\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\\r\\n            var key = parentKeys_1[_a];\\r\\n            var hasKey = set.has(key);\\r\\n            if (!hasKey) {\\r\\n                set.add(key);\\r\\n                keys.push(key);\\r\\n            }\\r\\n        }\\r\\n        return keys;\\r\\n    }\\r\\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\\r\\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\\r\\n    function OrdinaryOwnMetadataKeys(O, P) {\\r\\n        var keys = [];\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return keys;\\r\\n        var keysObj = metadataMap.keys();\\r\\n        var iterator = GetIterator(keysObj);\\r\\n        var k = 0;\\r\\n        while (true) {\\r\\n            var next = IteratorStep(iterator);\\r\\n            if (!next) {\\r\\n                keys.length = k;\\r\\n                return keys;\\r\\n            }\\r\\n            var nextValue = IteratorValue(next);\\r\\n            try {\\r\\n                keys[k] = nextValue;\\r\\n            }\\r\\n            catch (e) {\\r\\n                try {\\r\\n                    IteratorClose(iterator);\\r\\n                }\\r\\n                finally {\\r\\n                    throw e;\\r\\n                }\\r\\n            }\\r\\n            k++;\\r\\n        }\\r\\n    }\\r\\n    // 6 ECMAScript Data Typ0es and Values\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\\r\\n    function Type(x) {\\r\\n        if (x === null)\\r\\n            return 1 /* Null */;\\r\\n        switch (typeof x) {\\r\\n            case \\\"undefined\\\": return 0 /* Undefined */;\\r\\n            case \\\"boolean\\\": return 2 /* Boolean */;\\r\\n            case \\\"string\\\": return 3 /* String */;\\r\\n            case \\\"symbol\\\": return 4 /* Symbol */;\\r\\n            case \\\"number\\\": return 5 /* Number */;\\r\\n            case \\\"object\\\": return x === null ? 1 /* Null */ : 6 /* Object */;\\r\\n            default: return 6 /* Object */;\\r\\n        }\\r\\n    }\\r\\n    // 6.1.1 The Undefined Type\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\\r\\n    function IsUndefined(x) {\\r\\n        return x === undefined;\\r\\n    }\\r\\n    // 6.1.2 The Null Type\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\\r\\n    function IsNull(x) {\\r\\n        return x === null;\\r\\n    }\\r\\n    // 6.1.5 The Symbol Type\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\\r\\n    function IsSymbol(x) {\\r\\n        return typeof x === \\\"symbol\\\";\\r\\n    }\\r\\n    // 6.1.7 The Object Type\\r\\n    // https://tc39.github.io/ecma262/#sec-object-type\\r\\n    function IsObject(x) {\\r\\n        return typeof x === \\\"object\\\" ? x !== null : typeof x === \\\"function\\\";\\r\\n    }\\r\\n    // 7.1 Type Conversion\\r\\n    // https://tc39.github.io/ecma262/#sec-type-conversion\\r\\n    // 7.1.1 ToPrimitive(input [, PreferredType])\\r\\n    // https://tc39.github.io/ecma262/#sec-toprimitive\\r\\n    function ToPrimitive(input, PreferredType) {\\r\\n        switch (Type(input)) {\\r\\n            case 0 /* Undefined */: return input;\\r\\n            case 1 /* Null */: return input;\\r\\n            case 2 /* Boolean */: return input;\\r\\n            case 3 /* String */: return input;\\r\\n            case 4 /* Symbol */: return input;\\r\\n            case 5 /* Number */: return input;\\r\\n        }\\r\\n        var hint = PreferredType === 3 /* String */ ? \\\"string\\\" : PreferredType === 5 /* Number */ ? \\\"number\\\" : \\\"default\\\";\\r\\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\\r\\n        if (exoticToPrim !== undefined) {\\r\\n            var result = exoticToPrim.call(input, hint);\\r\\n            if (IsObject(result))\\r\\n                throw new TypeError();\\r\\n            return result;\\r\\n        }\\r\\n        return OrdinaryToPrimitive(input, hint === \\\"default\\\" ? \\\"number\\\" : hint);\\r\\n    }\\r\\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\\r\\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\\r\\n    function OrdinaryToPrimitive(O, hint) {\\r\\n        if (hint === \\\"string\\\") {\\r\\n            var toString_1 = O.toString;\\r\\n            if (IsCallable(toString_1)) {\\r\\n                var result = toString_1.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n            var valueOf = O.valueOf;\\r\\n            if (IsCallable(valueOf)) {\\r\\n                var result = valueOf.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            var valueOf = O.valueOf;\\r\\n            if (IsCallable(valueOf)) {\\r\\n                var result = valueOf.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n            var toString_2 = O.toString;\\r\\n            if (IsCallable(toString_2)) {\\r\\n                var result = toString_2.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n        }\\r\\n        throw new TypeError();\\r\\n    }\\r\\n    // 7.1.2 ToBoolean(argument)\\r\\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\\r\\n    function ToBoolean(argument) {\\r\\n        return !!argument;\\r\\n    }\\r\\n    // 7.1.12 ToString(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-tostring\\r\\n    function ToString(argument) {\\r\\n        return \\\"\\\" + argument;\\r\\n    }\\r\\n    // 7.1.14 ToPropertyKey(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-topropertykey\\r\\n    function ToPropertyKey(argument) {\\r\\n        var key = ToPrimitive(argument, 3 /* String */);\\r\\n        if (IsSymbol(key))\\r\\n            return key;\\r\\n        return ToString(key);\\r\\n    }\\r\\n    // 7.2 Testing and Comparison Operations\\r\\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\\r\\n    // 7.2.2 IsArray(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-isarray\\r\\n    function IsArray(argument) {\\r\\n        return Array.isArray\\r\\n            ? Array.isArray(argument)\\r\\n            : argument instanceof Object\\r\\n                ? argument instanceof Array\\r\\n                : Object.prototype.toString.call(argument) === \\\"[object Array]\\\";\\r\\n    }\\r\\n    // 7.2.3 IsCallable(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-iscallable\\r\\n    function IsCallable(argument) {\\r\\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\\r\\n        return typeof argument === \\\"function\\\";\\r\\n    }\\r\\n    // 7.2.4 IsConstructor(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-isconstructor\\r\\n    function IsConstructor(argument) {\\r\\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\\r\\n        return typeof argument === \\\"function\\\";\\r\\n    }\\r\\n    // 7.2.7 IsPropertyKey(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\\r\\n    function IsPropertyKey(argument) {\\r\\n        switch (Type(argument)) {\\r\\n            case 3 /* String */: return true;\\r\\n            case 4 /* Symbol */: return true;\\r\\n            default: return false;\\r\\n        }\\r\\n    }\\r\\n    // 7.3 Operations on Objects\\r\\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\\r\\n    // 7.3.9 GetMethod(V, P)\\r\\n    // https://tc39.github.io/ecma262/#sec-getmethod\\r\\n    function GetMethod(V, P) {\\r\\n        var func = V[P];\\r\\n        if (func === undefined || func === null)\\r\\n            return undefined;\\r\\n        if (!IsCallable(func))\\r\\n            throw new TypeError();\\r\\n        return func;\\r\\n    }\\r\\n    // 7.4 Operations on Iterator Objects\\r\\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\\r\\n    function GetIterator(obj) {\\r\\n        var method = GetMethod(obj, iteratorSymbol);\\r\\n        if (!IsCallable(method))\\r\\n            throw new TypeError(); // from Call\\r\\n        var iterator = method.call(obj);\\r\\n        if (!IsObject(iterator))\\r\\n            throw new TypeError();\\r\\n        return iterator;\\r\\n    }\\r\\n    // 7.4.4 IteratorValue(iterResult)\\r\\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\\r\\n    function IteratorValue(iterResult) {\\r\\n        return iterResult.value;\\r\\n    }\\r\\n    // 7.4.5 IteratorStep(iterator)\\r\\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\\r\\n    function IteratorStep(iterator) {\\r\\n        var result = iterator.next();\\r\\n        return result.done ? false : result;\\r\\n    }\\r\\n    // 7.4.6 IteratorClose(iterator, completion)\\r\\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\\r\\n    function IteratorClose(iterator) {\\r\\n        var f = iterator[\\\"return\\\"];\\r\\n        if (f)\\r\\n            f.call(iterator);\\r\\n    }\\r\\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\\r\\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\\r\\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\\r\\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\\r\\n    function OrdinaryGetPrototypeOf(O) {\\r\\n        var proto = Object.getPrototypeOf(O);\\r\\n        if (typeof O !== \\\"function\\\" || O === functionPrototype)\\r\\n            return proto;\\r\\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\\r\\n        // Try to determine the superclass constructor. Compatible implementations\\r\\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\\r\\n        // or ensure each class has a valid `constructor` property on its prototype that\\r\\n        // points back to the constructor.\\r\\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\\r\\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\\r\\n        if (proto !== functionPrototype)\\r\\n            return proto;\\r\\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\\r\\n        var prototype = O.prototype;\\r\\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\\r\\n        if (prototypeProto == null || prototypeProto === Object.prototype)\\r\\n            return proto;\\r\\n        // If the constructor was not a function, then we cannot determine the heritage.\\r\\n        var constructor = prototypeProto.constructor;\\r\\n        if (typeof constructor !== \\\"function\\\")\\r\\n            return proto;\\r\\n        // If we have some kind of self-reference, then we cannot determine the heritage.\\r\\n        if (constructor === O)\\r\\n            return proto;\\r\\n        // we have a pretty good guess at the heritage.\\r\\n        return constructor;\\r\\n    }\\r\\n    // naive Map shim\\r\\n    function CreateMapPolyfill() {\\r\\n        var cacheSentinel = {};\\r\\n        var arraySentinel = [];\\r\\n        var MapIterator = (function () {\\r\\n            function MapIterator(keys, values, selector) {\\r\\n                this._index = 0;\\r\\n                this._keys = keys;\\r\\n                this._values = values;\\r\\n                this._selector = selector;\\r\\n            }\\r\\n            MapIterator.prototype[\\\"@@iterator\\\"] = function () { return this; };\\r\\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\\r\\n            MapIterator.prototype.next = function () {\\r\\n                var index = this._index;\\r\\n                if (index >= 0 && index < this._keys.length) {\\r\\n                    var result = this._selector(this._keys[index], this._values[index]);\\r\\n                    if (index + 1 >= this._keys.length) {\\r\\n                        this._index = -1;\\r\\n                        this._keys = arraySentinel;\\r\\n                        this._values = arraySentinel;\\r\\n                    }\\r\\n                    else {\\r\\n                        this._index++;\\r\\n                    }\\r\\n                    return { value: result, done: false };\\r\\n                }\\r\\n                return { value: undefined, done: true };\\r\\n            };\\r\\n            MapIterator.prototype.throw = function (error) {\\r\\n                if (this._index >= 0) {\\r\\n                    this._index = -1;\\r\\n                    this._keys = arraySentinel;\\r\\n                    this._values = arraySentinel;\\r\\n                }\\r\\n                throw error;\\r\\n            };\\r\\n            MapIterator.prototype.return = function (value) {\\r\\n                if (this._index >= 0) {\\r\\n                    this._index = -1;\\r\\n                    this._keys = arraySentinel;\\r\\n                    this._values = arraySentinel;\\r\\n                }\\r\\n                return { value: value, done: true };\\r\\n            };\\r\\n            return MapIterator;\\r\\n        }());\\r\\n        return (function () {\\r\\n            function Map() {\\r\\n                this._keys = [];\\r\\n                this._values = [];\\r\\n                this._cacheKey = cacheSentinel;\\r\\n                this._cacheIndex = -2;\\r\\n            }\\r\\n            Object.defineProperty(Map.prototype, \\\"size\\\", {\\r\\n                get: function () { return this._keys.length; },\\r\\n                enumerable: true,\\r\\n                configurable: true\\r\\n            });\\r\\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\\r\\n            Map.prototype.get = function (key) {\\r\\n                var index = this._find(key, /*insert*/ false);\\r\\n                return index >= 0 ? this._values[index] : undefined;\\r\\n            };\\r\\n            Map.prototype.set = function (key, value) {\\r\\n                var index = this._find(key, /*insert*/ true);\\r\\n                this._values[index] = value;\\r\\n                return this;\\r\\n            };\\r\\n            Map.prototype.delete = function (key) {\\r\\n                var index = this._find(key, /*insert*/ false);\\r\\n                if (index >= 0) {\\r\\n                    var size = this._keys.length;\\r\\n                    for (var i = index + 1; i < size; i++) {\\r\\n                        this._keys[i - 1] = this._keys[i];\\r\\n                        this._values[i - 1] = this._values[i];\\r\\n                    }\\r\\n                    this._keys.length--;\\r\\n                    this._values.length--;\\r\\n                    if (key === this._cacheKey) {\\r\\n                        this._cacheKey = cacheSentinel;\\r\\n                        this._cacheIndex = -2;\\r\\n                    }\\r\\n                    return true;\\r\\n                }\\r\\n                return false;\\r\\n            };\\r\\n            Map.prototype.clear = function () {\\r\\n                this._keys.length = 0;\\r\\n                this._values.length = 0;\\r\\n                this._cacheKey = cacheSentinel;\\r\\n                this._cacheIndex = -2;\\r\\n            };\\r\\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\\r\\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\\r\\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\\r\\n            Map.prototype[\\\"@@iterator\\\"] = function () { return this.entries(); };\\r\\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\\r\\n            Map.prototype._find = function (key, insert) {\\r\\n                if (this._cacheKey !== key) {\\r\\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\\r\\n                }\\r\\n                if (this._cacheIndex < 0 && insert) {\\r\\n                    this._cacheIndex = this._keys.length;\\r\\n                    this._keys.push(key);\\r\\n                    this._values.push(undefined);\\r\\n                }\\r\\n                return this._cacheIndex;\\r\\n            };\\r\\n            return Map;\\r\\n        }());\\r\\n        function getKey(key, _) {\\r\\n            return key;\\r\\n        }\\r\\n        function getValue(_, value) {\\r\\n            return value;\\r\\n        }\\r\\n        function getEntry(key, value) {\\r\\n            return [key, value];\\r\\n        }\\r\\n    }\\r\\n    // naive Set shim\\r\\n    function CreateSetPolyfill() {\\r\\n        return (function () {\\r\\n            function Set() {\\r\\n                this._map = new _Map();\\r\\n            }\\r\\n            Object.defineProperty(Set.prototype, \\\"size\\\", {\\r\\n                get: function () { return this._map.size; },\\r\\n                enumerable: true,\\r\\n                configurable: true\\r\\n            });\\r\\n            Set.prototype.has = function (value) { return this._map.has(value); };\\r\\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\\r\\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\\r\\n            Set.prototype.clear = function () { this._map.clear(); };\\r\\n            Set.prototype.keys = function () { return this._map.keys(); };\\r\\n            Set.prototype.values = function () { return this._map.values(); };\\r\\n            Set.prototype.entries = function () { return this._map.entries(); };\\r\\n            Set.prototype[\\\"@@iterator\\\"] = function () { return this.keys(); };\\r\\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\\r\\n            return Set;\\r\\n        }());\\r\\n    }\\r\\n    // naive WeakMap shim\\r\\n    function CreateWeakMapPolyfill() {\\r\\n        var UUID_SIZE = 16;\\r\\n        var keys = HashMap.create();\\r\\n        var rootKey = CreateUniqueKey();\\r\\n        return (function () {\\r\\n            function WeakMap() {\\r\\n                this._key = CreateUniqueKey();\\r\\n            }\\r\\n            WeakMap.prototype.has = function (target) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\\r\\n                return table !== undefined ? HashMap.has(table, this._key) : false;\\r\\n            };\\r\\n            WeakMap.prototype.get = function (target) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\\r\\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\\r\\n            };\\r\\n            WeakMap.prototype.set = function (target, value) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\\r\\n                table[this._key] = value;\\r\\n                return this;\\r\\n            };\\r\\n            WeakMap.prototype.delete = function (target) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\\r\\n                return table !== undefined ? delete table[this._key] : false;\\r\\n            };\\r\\n            WeakMap.prototype.clear = function () {\\r\\n                // NOTE: not a real clear, just makes the previous data unreachable\\r\\n                this._key = CreateUniqueKey();\\r\\n            };\\r\\n            return WeakMap;\\r\\n        }());\\r\\n        function CreateUniqueKey() {\\r\\n            var key;\\r\\n            do\\r\\n                key = \\\"@@WeakMap@@\\\" + CreateUUID();\\r\\n            while (HashMap.has(keys, key));\\r\\n            keys[key] = true;\\r\\n            return key;\\r\\n        }\\r\\n        function GetOrCreateWeakMapTable(target, create) {\\r\\n            if (!hasOwn.call(target, rootKey)) {\\r\\n                if (!create)\\r\\n                    return undefined;\\r\\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\\r\\n            }\\r\\n            return target[rootKey];\\r\\n        }\\r\\n        function FillRandomBytes(buffer, size) {\\r\\n            for (var i = 0; i < size; ++i)\\r\\n                buffer[i] = Math.random() * 0xff | 0;\\r\\n            return buffer;\\r\\n        }\\r\\n        function GenRandomBytes(size) {\\r\\n            if (typeof Uint8Array === \\\"function\\\") {\\r\\n                if (typeof crypto !== \\\"undefined\\\")\\r\\n                    return crypto.getRandomValues(new Uint8Array(size));\\r\\n                if (typeof msCrypto !== \\\"undefined\\\")\\r\\n                    return msCrypto.getRandomValues(new Uint8Array(size));\\r\\n                return FillRandomBytes(new Uint8Array(size), size);\\r\\n            }\\r\\n            return FillRandomBytes(new Array(size), size);\\r\\n        }\\r\\n        function CreateUUID() {\\r\\n            var data = GenRandomBytes(UUID_SIZE);\\r\\n            // mark as random - RFC 4122 § 4.4\\r\\n            data[6] = data[6] & 0x4f | 0x40;\\r\\n            data[8] = data[8] & 0xbf | 0x80;\\r\\n            var result = \\\"\\\";\\r\\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\\r\\n                var byte = data[offset];\\r\\n                if (offset === 4 || offset === 6 || offset === 8)\\r\\n                    result += \\\"-\\\";\\r\\n                if (byte < 16)\\r\\n                    result += \\\"0\\\";\\r\\n                result += byte.toString(16).toLowerCase();\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n    }\\r\\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\\r\\n    function MakeDictionary(obj) {\\r\\n        obj.__ = undefined;\\r\\n        delete obj.__;\\r\\n        return obj;\\r\\n    }\\r\\n    // patch global Reflect\\r\\n    (function (__global) {\\r\\n        if (typeof __global.Reflect !== \\\"undefined\\\") {\\r\\n            if (__global.Reflect !== Reflect) {\\r\\n                for (var p in Reflect) {\\r\\n                    if (hasOwn.call(Reflect, p)) {\\r\\n                        __global.Reflect[p] = Reflect[p];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            __global.Reflect = Reflect;\\r\\n        }\\r\\n    })(typeof global !== \\\"undefined\\\" ? global :\\r\\n        typeof self !== \\\"undefined\\\" ? self :\\r\\n            Function(\\\"return this;\\\")());\\r\\n})(Reflect || (Reflect = {}));\\r\\n//# sourceMappingURL=Reflect.js.map\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Palinda/angular 2/ng2-base/node_modules/raw-loader!D:/Palinda/angular 2/ng2-base/node_modules/reflect-metadata/Reflect.js\n// module id = ../../../../raw-loader/index.js!../../../../reflect-metadata/Reflect.js\n// module chunks = scripts","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Palinda/angular 2/ng2-base/node_modules/script-loader/addScript.js\n// module id = ../../../../script-loader/addScript.js\n// module chunks = scripts","require(\"!!D:\\\\Palinda\\\\angular 2\\\\ng2-base\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!D:\\\\Palinda\\\\angular 2\\\\ng2-base\\\\node_modules\\\\raw-loader\\\\index.js!D:\\\\Palinda\\\\angular 2\\\\ng2-base\\\\node_modules\\\\file-saver\\\\FileSaver.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Palinda/angular 2/ng2-base/node_modules/script-loader!D:/Palinda/angular 2/ng2-base/node_modules/file-saver/FileSaver.js\n// module id = ../../../../script-loader/index.js!../../../../file-saver/FileSaver.js\n// module chunks = scripts","require(\"!!D:\\\\Palinda\\\\angular 2\\\\ng2-base\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!D:\\\\Palinda\\\\angular 2\\\\ng2-base\\\\node_modules\\\\raw-loader\\\\index.js!D:\\\\Palinda\\\\angular 2\\\\ng2-base\\\\node_modules\\\\reflect-metadata\\\\Reflect.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Palinda/angular 2/ng2-base/node_modules/script-loader!D:/Palinda/angular 2/ng2-base/node_modules/reflect-metadata/Reflect.js\n// module id = ../../../../script-loader/index.js!../../../../reflect-metadata/Reflect.js\n// module chunks = scripts"],"sourceRoot":"webpack:///"}